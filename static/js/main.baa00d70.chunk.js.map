{"version":3,"sources":["reducers/searchResults.ts","reducers/popularMoviesLoading.ts","ActionTypes.ts","reducers/selectMovie.ts","reducers/cast.ts","reducers/index.ts","reducers/token.ts","reducers/popularMovies.ts","reducers/upcomingMovies.ts","reducers/showMovie.ts","reducers/nowPlaying.ts","actions/index.ts","utils/cookie.ts","cycle/index.ts","components/header.tsx","components/footer.tsx","containers/App.tsx","containers/Modal.tsx","components/movieSearchInput.tsx","components/searchWithResults.tsx","components/moviesList.tsx","components/cast.tsx","components/MovieModal.tsx","containers/HomePage.tsx","components/loader.tsx","containers/NowPlaying.tsx","containers/NotFoundPage.tsx","serviceWorker.ts","index.tsx","configureStore.ts","film-poster-placeholder.png","profile.png"],"names":["initialState","upcomingMoviesLoading","state","action","type","combineReducers","token","payload","popularMovies","movies","popularMoviesLoading","upcomingMovies","searchResults","showMovie","selectMovie","movie","nowPlaying","cast","receiveToken","receiveSearchMovies","clearSearchResults","Cookie","invoke","name","value","options","Cookies","set","JSON","stringify","retrieve","key","cookie","get","undefined","parse","revoke","remove","getResourceUrl","path","params","process","Object","keys","map","join","withAuthToken","resource","request_token","url","headers","method","category","combineCycles","sources","ACTION","filter","actions","token$","request$","entry","api_key","response$","HTTP","select","flatten","xs","combine","response","body","expires","filters","movies$","results","query","q","Time","periodic","take","mapTo","endWhen","res","movie$","id","append_to_response","Header","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","Footer","App","children","Fragment","Modal","props","el","MODAL_NODE","handleDeselectMovie","bind","handleShowModal","handleChildClick","document","getElementById","createElement","this","addEventListener","appendChild","removeEventListener","removeChild","classList","toggle","deselectMovie","event","stopPropagation","ReactDOM","createPortal","React","Component","connect","MovieSearchInput","defaultValue","onChange","placeholder","e","target","SearchResults","handleChange","setState","searchMovies","search_result_classes","push","length","src","poster_path","PlaceholderImage","alt","title","PureComponent","MoviesList","collection","loading","onClick","style","opacity","release_date","Cast","useState","profile_path","setImagePath","description","data-tooltip","data-placement","onError","Profile","MovieModal","handleTabChange","documentElement","setProperty","backdrop_path","console","log","genres","overview","videos","release_dates","poster","poster_description","certification","genre_pils","genre","person","video","width","HomePage","handleMovieSelect","handleSearchChange","requestToken","nextProps","upcomingResults","upcomingLoading","popularResults","showModal","selectedMovie","modal","loader","NowPlaying","requestNowPlaying","content","NotFoundPage","Boolean","window","location","hostname","match","store","cycleMiddleware","createCycleMiddleware","makeActionDriver","makeStateDriver","composeEnhancers","compose","middlewares","enhancers","applyMiddleware","createStore","rootReducer","run","cycles","STATE","timeDriver","makeHTTPDriver","configureStore","MOUNT_NODE","render","basename","exact","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.baa00d70.chunk.js","sourcesContent":["import * as ActionTypes from '../ActionTypes';\n\nconst initialState:any = [];\nexport default function searchResults(state = initialState, action:any){\n    switch(action.type) {\n        case ActionTypes.RECEIVED_MOVIES:\n            return action.payload.movies;\n        case ActionTypes.CLEARED_SEARCH_RESULTS:\n            return initialState;\n        default:\n            return state;\n    }\n}","import { REQUESTED_UPCOMING_MOVIES, RECEIVED_UPCOMING_MOVIES } from \"../ActionTypes\";\n\nexport default function upcomingMoviesLoading(state = false, action:any){\n    switch(action.type) {\n        case REQUESTED_UPCOMING_MOVIES:\n            return true\n        case RECEIVED_UPCOMING_MOVIES:\n            return false;\n        default:\n            return state;\n    }\n}","export const REQUESTED_TOKEN = \"REQUESTED_TOKEN\";\nexport const RECEIVED_TOKEN = \"RECEIVED_TOKEN\";\n\nexport const REQUESTED_MOVIE = \"REQUESTED_MOVIE\";\nexport const RECEIVED_MOVIE = \"RECEIVED_MOVIE\";\n\nexport const REQUESTED_UPCOMING_MOVIES = \"REQUESTED_UPCOMING_MOVIES\";\nexport const RECEIVED_UPCOMING_MOVIES = \"RECEIVED_UPCOMING_MOVIES\";\n\nexport const REQUESTED_POPULAR_MOVIES = \"REQUESTED_POPULAR_MOVIES\";\nexport const RECEIVED_POPULAR_MOVIES = \"RECEIVED_POPULAR_MOVIES\";\n\nexport const SEARCH_MOVIES = \"SEARCH_MOVIES\";\nexport const RECEIVED_MOVIES = \"RECEIVED_MOVIES\";\nexport const CLEARED_SEARCH_RESULTS = \"CLEARED_SEARCH_RESULTS\";\n\nexport const SHOW_MOVIE = \"SHOW_MOVIE\";\nexport const HIDE_MOVIE = \"HIDE_MOVIE\";\n\nexport const SELECT_MOVIE = \"SELECT_MOVIE\";\nexport const DESELECT_MOVIE = \"DESELECT_MOVIE\";\n\nexport const REQUESTED_NOW_PLAYING = \"REQUESTED_NOW_PLAYING\";\nexport const RECEIVED_NOW_PLAYING = \"RECEIVED_NOW_PLAYING\";\n\nexport const RECEIVED_CAST = \"RECEIVED_CAST\";","import * as ActionTypes from '../ActionTypes';\n\nconst initialState = {}\nexport default function selectMovie (state = initialState, action:any){\n    switch(action.type){\n        case ActionTypes.RECEIVED_MOVIE:\n        case ActionTypes.SELECT_MOVIE:\n            return action.payload.movie;\n        case ActionTypes.DESELECT_MOVIE:\n            return initialState;\n        default:\n            return state;\n    }\n}","import * as ActionTypes from '../ActionTypes';\nimport {Cast} from \"../models/Cast\";\n\nconst initialState: Cast[] = [];\nexport default function cast(state:Array<Cast> = initialState, action:any){\n    switch(action.type){\n        case ActionTypes.RECEIVED_CAST:\n            return action.payload.cast;\n        case ActionTypes.DESELECT_MOVIE:\n            return initialState;\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\n\nimport token from './token';\nimport popularMovies from './popularMovies';\nimport searchResults from './searchResults';\nimport popularMoviesLoading from './popularMoviesLoading';\nimport upcomingMovies from './upcomingMovies';\nimport upcomingMoviesLoading from './popularMoviesLoading';\nimport showMovie from './showMovie';\nimport selectMovie from './selectMovie';\nimport nowPlaying from './nowPlaying';\nimport cast from './cast';\n\nexport default combineReducers({\n    token,\n    popularMovies,\n    popularMoviesLoading,\n    upcomingMovies,\n    upcomingMoviesLoading,\n    searchResults,\n    showMovie,\n    selectMovie,\n    nowPlaying,\n    cast\n});","import { REQUESTED_TOKEN, RECEIVED_TOKEN } from '../ActionTypes';\n\nexport default function token(state=\"\", action:any){\n    switch(action.type){\n        case RECEIVED_TOKEN:\n            return action.payload.token;\n        case REQUESTED_TOKEN:\n        default:\n            return state;\n    }\n}","import { REQUESTED_POPULAR_MOVIES, RECEIVED_POPULAR_MOVIES } from \"../ActionTypes\";\nimport {Movie} from \"../models/Movie\";\n\nexport default function popularMovies(state:Array<Movie> = [], action:any){\n    switch(action.type){\n        case REQUESTED_POPULAR_MOVIES:\n            return state;\n        case RECEIVED_POPULAR_MOVIES:\n            return action.payload.movies;\n        default:\n            return state;\n    }\n}","import { REQUESTED_UPCOMING_MOVIES, RECEIVED_UPCOMING_MOVIES } from \"../ActionTypes\";\nimport {Movie} from \"../models/Movie\";\nexport default function popularMovies(state:Array<Movie> = [], action:any){\n    switch(action.type){\n        case REQUESTED_UPCOMING_MOVIES:\n            return state;\n        case RECEIVED_UPCOMING_MOVIES:\n            return action.payload.movies;\n        default:\n            return state;\n    }\n}","import * as ActionTypes from '../ActionTypes';\n\nexport default function showMovie(state = false, action:any){\n    switch(action.type) {\n        case ActionTypes.DESELECT_MOVIE:\n        case ActionTypes.HIDE_MOVIE:\n            return false;\n        case ActionTypes.SELECT_MOVIE:\n        case ActionTypes.SHOW_MOVIE:\n            return true;\n        default:\n            return state;\n    }\n}","import * as ActionTypes from '../ActionTypes';\nimport {Movie} from \"../models/Movie\";\n\nexport default function nowPlaying(state:Array<Movie> = [], action:any) {\n    switch(action.type){\n        case ActionTypes.RECEIVED_NOW_PLAYING:\n            return action.payload.movies;\n        case ActionTypes.REQUESTED_NOW_PLAYING:\n        default:\n            return state;\n    }\n}","import * as ActionTypes from '../ActionTypes';\nimport {Movie} from \"../models/Movie\";\n\nexport function requestToken(){\n    return {\n        type: ActionTypes.REQUESTED_TOKEN\n    }\n}\nexport function receiveToken(token: string) {\n    return {\n        type: ActionTypes.RECEIVED_TOKEN,\n        payload: { token }\n    }\n}\n\nexport function requestMovieDetails(movie: Movie){\n    return {\n        type: ActionTypes.REQUESTED_MOVIE,\n        payload: { movie }\n    }\n}\nexport function receiveMovieDetails(movie:Movie) {\n    return {\n        type: ActionTypes.RECEIVED_MOVIE,\n        payload: { movie }\n    }\n}\n\nexport function searchPopularMovies(){\n    return {\n        type: ActionTypes.REQUESTED_POPULAR_MOVIES,\n    }\n}\nexport function receivePopularMovies(movies:Array<Movie>){\n    return {\n        type: ActionTypes.RECEIVED_POPULAR_MOVIES,\n        payload: { movies }\n    }\n}\nexport function requestUpcomingMovies() {\n    return {\n        type: ActionTypes.REQUESTED_UPCOMING_MOVIES,\n    }\n}\n\nexport function receiveUpcomingMovies(movies:Array<Movie>) {\n    return {\n        type: ActionTypes.RECEIVED_UPCOMING_MOVIES,\n        payload: { movies }\n    }\n}\n\nexport function receiveSearchMovies(movies:Array<Movie>){\n    return {\n        type: ActionTypes.RECEIVED_MOVIES,\n        payload: { movies }\n    }\n}\n\nexport function searchMovies(query:string) {\n    return {\n        type: ActionTypes.SEARCH_MOVIES,\n        payload: { query }\n    }\n}\n\nexport function clearSearchResults(){\n    return {\n        type: ActionTypes.CLEARED_SEARCH_RESULTS\n    }\n}\nexport function showMovie(){\n    return {\n        type: ActionTypes.SHOW_MOVIE\n    }\n}\nexport function hideMovie() {\n    return {\n        type: ActionTypes.HIDE_MOVIE\n    }\n}\n\nexport function selectMovie(movie:Movie){\n    return {\n        type: ActionTypes.SELECT_MOVIE,\n        payload: { movie }\n    }\n}\nexport function deselectMovie(){\n    return {\n        type: ActionTypes.DESELECT_MOVIE\n    }\n}\n\nexport function requestNowPlaying(){\n    return {\n        type: ActionTypes.REQUESTED_NOW_PLAYING\n    }\n}\nexport function receivedNowPlaying(movies:Array<Movie>) {\n    return {\n        type: ActionTypes.RECEIVED_NOW_PLAYING,\n        payload: { movies }\n    }\n}\n\nexport function receivedCast(cast: any) {\n    return {\n        type: ActionTypes.RECEIVED_CAST,\n        payload: { cast }\n    }\n\n}","// @ts-ignore\nimport Cookies from 'js-cookie';\n\nconst Cookie = {\n    invoke(name: string, value:{}, options?:{}) {\n        Cookies.set(name, JSON.stringify(value), options);\n    },\n    retrieve(key:string){\n        const cookie = Cookies.get(key);\n        if (cookie === undefined) {\n            return false;\n        }\n        return JSON.parse(cookie);\n    },\n\n    revoke(key:string) {\n        Cookies.remove(key);\n    }\n}\n\nexport default Cookie;","import * as actions from '../actions';\nimport * as ActionTypes from '../ActionTypes';\nimport Cookie from '../utils/cookie';\n\nimport { combineCycles } from 'redux-cycles';\nimport xs from 'xstream';\n\nfunction getResourceUrl(path:string, params:any = null):string {\n    const options = {'api_key': process.env.REACT_APP_TMDB_API_KEY, ...params};\n    return process.env.REACT_APP_TMDB_API_URL + path + '?' + Object.keys(options).map((key:any) => key + '=' + options[key]).join('&');\n}\n\nfunction withAuthToken(resource:string, path:string, params:{} = {}) {\n    const { request_token } = Cookie.retrieve(\"TMDb\") ;\n    return {\n        url: getResourceUrl(path, params),\n        headers: {\n            'Authorization': 'Bearer ' + request_token,\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        method: \"GET\",\n        category: resource\n    };\n}\n\nexport function fetchToken(sources: any){\n    const cookie = Cookie.retrieve('TMDb')\n    if(cookie) {\n        const action$ = sources.ACTION\n            .filter((action:any) => action.type === ActionTypes.REQUESTED_TOKEN)\n            .map((action:any) => actions.receiveToken(cookie.request_token));\n        return {\n            ACTION: action$\n        }\n    }\n    const token$ = sources.ACTION\n        .filter((action:any) => action.type === ActionTypes.REQUESTED_TOKEN);\n\n    const request$ = token$\n        .map((entry:any) => ({\n            url: getResourceUrl('authentication/token/new', { api_key: \"1e859dc9f92ec822aa44af583dfc67fc\" }),\n            category: 'token'\n        }));\n\n    const response$ = sources.HTTP\n        .select('token')\n        .flatten();\n\n    const action$ = xs.combine(response$, token$)\n        .map((entry:any) => {\n            const response = entry[0].body;\n            Cookie.invoke('TMDb', response, { expires: 1})\n            return actions.receiveToken(response.request_token)\n        });\n\n    return {\n        ACTION: action$,\n        HTTP: request$\n    }\n}\n\nexport function fetchPopularMovies(sources: any){\n    const filters = {\n        'release_date.gte':'2019-01-01',\n        'release_date.lte': '2020-01-01',\n        'sort_by':'popularity.desc'\n    }\n    const movies$ = sources.ACTION\n        .filter((action:any) => action.type === ActionTypes.RECEIVED_TOKEN);\n\n    const request$ = movies$\n        .map((movie:any) => (withAuthToken('popular','discover/movie', filters)))\n\n    const response$ = sources.HTTP\n        .select('popular')\n        .flatten();\n\n    const action$ = xs.combine(response$, movies$)\n        .map((entry:any) => actions.receivePopularMovies(entry[0].body.results));\n\n    return {\n        ACTION: action$,\n        HTTP: request$\n    }\n}\n\nexport function fetchUpcomingMovies(sources: any){\n    const movies$ = sources.ACTION\n        .filter((action:any) => action.type === ActionTypes.RECEIVED_TOKEN);\n\n    const request$ = movies$\n        .map((movie:any) => (withAuthToken('upcoming', 'movie/upcoming')));\n\n    const response$ = sources.HTTP\n        .select('upcoming')\n        .flatten();\n\n    const action$ = xs.combine(response$, movies$)\n        .map((entry:any) => actions.receiveUpcomingMovies(entry[0].body.results));\n\n    return {\n        ACTION: action$,\n        HTTP: request$\n    }\n}\n\nexport function searchMovies(sources: any) {\n    const query$ = sources.ACTION\n        .filter((action:any) => action.type === ActionTypes.SEARCH_MOVIES)\n        .map((action:any) => action.payload.query)\n        .filter((q:string) => !!q)\n        .map((q:string) =>\n        sources.Time.periodic(800)\n            .take(1)\n            .mapTo(q)\n            .endWhen(\n                sources.ACTION.filter((action:any) => action.type === ActionTypes.CLEARED_SEARCH_RESULTS)\n            )).flatten();\n\n    const request$ = query$\n        .map((q:string) => withAuthToken('search', 'search/movie', {query: q}));\n\n    const response$ = sources.HTTP\n        .select('search')\n        .flatten()\n        .map((res:any)  => res.body.results)\n        .map(actions.receiveSearchMovies);\n    return {\n        ACTION: response$,\n        HTTP: request$,\n    }\n}\n\nexport function clearSearchResults(sources: any){\n    const clear$ = sources.ACTION\n        .filter((action:any) => action.type === ActionTypes.SEARCH_MOVIES)\n        .filter((action:any) => !action.payload.query)\n        .map(actions.clearSearchResults)\n    return {\n        ACTION: clear$\n    }\n}\n\nexport function requestMovieDetails(sources: any) {\n    const movie$ = sources.ACTION\n        .filter((action:any) => action.type === ActionTypes.SELECT_MOVIE);\n\n    const request$ = movie$\n        .map((action:any) => withAuthToken('movie_details', 'movie/'+ action.payload.movie.id, {append_to_response: 'videos,release_dates'}));\n\n    const response$ = sources.HTTP\n        .select('movie_details')\n        .flatten();\n\n    const action$ = xs.combine(response$, movie$)\n        .map((res:any) => actions.receiveMovieDetails(res[0].body))\n    return {\n        ACTION: action$,\n        HTTP: request$\n    }\n}\nexport function requestNowPlaying(sources:any) {\n    const movie$ = sources.ACTION\n        .filter((action:any) => action.type === ActionTypes.REQUESTED_NOW_PLAYING);\n\n    const request$ = movie$\n        .map((action:any) => withAuthToken('now_playing', 'movie/now_playing'));\n\n    const response$ = sources.HTTP\n        .select('now_playing')\n        .flatten();\n\n    const action$ = xs.combine(response$, movie$)\n        .map((res:any) => actions.receivedNowPlaying(res[0].body.results));\n\n    return {\n        ACTION: action$,\n        HTTP: request$\n    }\n}\nexport function requestCast(sources:any){\n    const movie$ = sources.ACTION\n        .filter((action:any) => action.type === ActionTypes.SELECT_MOVIE);\n\n    const request$ = movie$\n        .map((action:any) => withAuthToken('cast', `movie/${action.payload.movie.id}/casts`));\n\n    const response$ = sources.HTTP\n        .select('cast')\n        .flatten();\n\n    const action$ = xs.combine(response$, movie$)\n        .map((res:any) => actions.receivedCast(res[0].body.cast));\n\n    return {\n        ACTION: action$,\n        HTTP: request$,\n    }\n}\n\n// TODO Make a nested list for the genres\n\n// @ts-ignore\nexport default combineCycles(\n    fetchToken,\n    fetchPopularMovies,\n    fetchUpcomingMovies,\n    clearSearchResults,\n    searchMovies,\n    requestMovieDetails,\n    requestNowPlaying,\n    requestCast);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(){\n    return (\n        <header>\n            <nav className=\"navbar navbar-expand-lg\">\n                <a href=\"#\" className=\"navbar-brand\">MoFlix</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\" />\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/now-playing\">Now Playing</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/popular\">Popular</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </header>\n    )\n}","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <footer className=\"footer p-3\">\n            <div className=\"container\">\n                <span className=\"text-muted\">created by Farzad Slamdien @ 2019</span>\n            </div>\n        </footer>\n    )\n}","import React from 'react';\nimport logo from '../logo.svg';\nimport Header from '../components/header';\nimport '../App.scss';\nimport Footer from \"../components/footer\";\n\nfunction App({children}:any) {\n  return (\n    <React.Fragment>\n      <Header />\n        {children}\n      <Footer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { deselectMovie } from '../actions';\n\nclass Modal extends React.Component<any, any>{\n    private el: HTMLDivElement;\n    private MODAL_NODE: HTMLElement | null;\n    constructor(props:any) {\n        super(props);\n        this.handleDeselectMovie = this.handleDeselectMovie.bind(this);\n        this.handleShowModal = this.handleShowModal.bind(this);\n        this.handleChildClick = this.handleChildClick.bind(this);\n        this.MODAL_NODE = document.getElementById('modal');\n        this.el = document.createElement('div');\n    }\n\n    componentDidMount() {\n        this.MODAL_NODE?.addEventListener('click', this.handleDeselectMovie);\n        this.el.addEventListener('click', this.handleChildClick);\n        this.handleShowModal();\n        // @ts-ignore\n        this.MODAL_NODE.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        this.MODAL_NODE?.removeEventListener('click', this.handleDeselectMovie);\n        this.el.removeEventListener('click', this.handleChildClick);\n        this.handleShowModal();\n        // @ts-ignore\n        this.MODAL_NODE.removeChild(this.el);\n    }\n\n    handleShowModal(){\n        const classNames = ['d-none', 'modal--open', 'show'];\n        classNames.map((name:string)=> this.MODAL_NODE?.classList.toggle(name));\n    }\n\n    handleDeselectMovie(){\n        this.props.deselectMovie();\n    }\n    handleChildClick(event:Event){\n        event.stopPropagation();\n    }\n\n    render() {\n        const {} = this.props;\n        return ReactDOM.createPortal(\n            this.props.children,\n            this.el,\n        )\n    }\n}\n\n\nexport default connect(() =>({}), { deselectMovie })(Modal);","import React from 'react';\n\ninterface MovieSearchInputProps {\n    value?: string;\n    defaultValue: string;\n    onChange: (value: any)=> void;\n}\n\nexport default function MovieSearchInput({value, defaultValue, onChange}: MovieSearchInputProps){\n    return (\n        <input className=\"form-control mr-sm-2\"\n               type=\"search\"\n               placeholder=\"Search\"\n               aria-label=\"Search\"\n               defaultValue={defaultValue}\n               onChange={(e:any) => onChange(e.target.value)}\n        />\n    );\n}","import React, {PureComponent} from 'react';\nimport { connect } from 'react-redux';\nimport PlaceholderImage from '../film-poster-placeholder.png';\nimport MovieSearchInput from './movieSearchInput';\nimport Loader from './loader';\nimport {searchMovies} from \"../actions\";\nimport {Movie} from \"../models/Movie\";\n\nclass SearchResults extends PureComponent<any, any> {\n    constructor(props:any) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            query: ''\n        };\n    }\n\n    handleChange(query: any) {\n        this.setState({query}, () => this.props.searchMovies(query));\n    }\n\n    render() {\n        const { query } = this.state;\n        const { searchResults } = this.props;\n        const search_result_classes = ['search__results'];\n        if(!query)\n            search_result_classes.push('search__results--collapsed');\n        const results = (<div className=\"card\">\n            <ul className=\"list-group list-group-flush\">\n                {(query && searchResults.length < 1) ? <li className=\"list-group-item\">Loading ...</li> : null}\n                {searchResults ? searchResults.map((movie:Movie) => (<li className=\"list-group-item p-0\">\n                        <img src={movie.poster_path ?`https://image.tmdb.org/t/p/w200${movie.poster_path}` : PlaceholderImage}\n                             className=\"card-img-top search__poster mr-3\"\n                             alt={`Poster for ${movie.title}`}\n                        />\n                            {movie.title}\n                        </li>)\n                ) : null}\n            </ul>\n        </div>);\n        return (\n            <div className=\"search__container\">\n                <MovieSearchInput onChange={this.handleChange} defaultValue={query} value=\"\" />\n                <div className={search_result_classes.join(' ')}>\n                    {results}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(({searchResults}: any)=>({searchResults}),{ searchMovies })(SearchResults);","import React from 'react';\nimport {Movie} from \"../models/Movie\";\nimport Rating from \"./rating\";\n\ninterface Props {\n    collection: Array<Movie>,\n    loading: boolean,\n    onClick: (movie:Movie) => void\n}\n\nexport default function MoviesList({collection, loading, onClick}: Props) {\n    return (\n        <div style={{opacity: loading ? 0.3 : 1 }} className=\"scaffold scaffold--horizontal-scroll\">\n            <div className=\"row\">\n                {collection.map((movie:Movie) => (\n                    <div key={movie.id} className=\"card outline-0 col-2 ml-1 mr-1 mb-2 p-0\" onClick={()=> onClick(movie)}>\n                        <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} className=\"card-img-top\" alt={`Poster for ${movie.title}`} />\n                        <div className=\"card-body p-1\">\n                            {/*<div><Rating rating={movie.vote_average}/></div>*/}\n                            <h5 className=\"card-title text-left text-wrap\">{movie.title}</h5>\n                            <p className=\"card-text text-muted text-left\">{movie.release_date}</p>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport {Cast as iCast} from \"../models/Cast\";\nimport Profile from '../profile.png';\n\nexport default function Cast(cast:iCast) {\n    const [src, setImagePath] = useState('https://image.tmdb.org/t/p/w300/' + cast.profile_path);\n    // const image_path = 'https://image.tmdb.org/t/p/w300/' + cast.profile_path;\n    const description = \"Profile image of \"+ cast.name;\n    return (\n        <div className=\"avatar ml-1 mr-1 mb-2\">\n            <a href=\"#\" data-tooltip={cast.name} data-placement=\"top\">\n                <img src={src} alt={description} onError={() => setImagePath(Profile)}/>\n            </a>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport {Genre} from \"../models/Genre\";\nimport {Cast as iCast} from \"../models/Cast\";\nimport Cast from '../components/cast';\nimport ReactPlayer from \"react-player\";\n\nclass MovieModal extends Component<any, any>{\n    constructor(props:any) {\n        super(props);\n        this.state = {key: 'overview'};\n        this.handleTabChange = this.handleTabChange.bind(this);\n    }\n    componentDidMount() {\n        const root = document.documentElement;\n        root.style.setProperty(\"--selected-movie-backdrop\", 'url(https://image.tmdb.org/t/p/w500/' + this.props.backdrop_path+')');\n    }\n\n    componentWillUnmount() {\n        const root = document.documentElement;\n        root.style.setProperty(\"--selected-movie-backdrop\", '');\n    }\n\n    handleTabChange(key: any){\n        console.log('handle tab', key);\n        this.setState({key: key});\n    }\n\n    render() {\n        const {poster_path, genres, overview, cast, videos, release_dates} = this.props;\n        const {key} = this.state;\n        const poster = 'https://image.tmdb.org/t/p/w300/' + poster_path;\n        const poster_description = 'Cover Art for ' + poster_path;\n        let certification = \"n/a\";\n        if (release_dates) {\n            certification = release_dates.results[0].release_dates[0].certification;\n        }\n\n        const genre_pils = genres ? genres.map((genre:Genre) =><span key={genre.id} className=\"badge badge-pill badge-light\">{genre.name}</span>): null;\n        return (\n            <React.Fragment>\n                <section className=\"modal__container\">\n                    <img className=\"poster poster--small\" src={poster} alt={poster_description}/>\n                    <article className=\"modal__hero\">\n                        <h2 className=\"modal__title offset-sm-4 col d-flex align-items-center\">{this.props.title}\n                        <span className=\"badge badge-pill badge-warning u-text--small ml-3\">{certification}</span>\n                        </h2>\n                        <div className=\"modal__rating\">ratings</div>\n                    </article>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <article className=\"col modal__genres\">{genre_pils}</article>\n                            <article className=\"col-8 modal__details\">\n                                <h5 className=\"detail-heading\">Overview</h5>\n                                <p>{overview}</p>\n                                <h5 className=\"detail-heading\">Cast</h5>\n                                <div className=\"row\">\n                                    {cast ? cast.map((person:iCast)=> <Cast {...person} />) : null}\n                                </div>\n                                <h5 className=\"detail-heading\">Trailers</h5>\n                                {videos? videos.results.map((video:any) => (<div className=\"row\">\n                                    <div className=\"col mb-1\">\n                                        <ReactPlayer url={`https://www.youtube.com/watch?v=${video.key}`} width=\"490px\"/>\n                                    </div>\n                                </div>)): null}\n                            </article>\n                        </div>\n                    </div>\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MovieModal;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { requestToken, selectMovie } from '../actions';\nimport Modal from './Modal';\nimport Search from '../components/searchWithResults';\nimport MoviesList from '../components/moviesList';\nimport {Movie} from '../models/Movie';\nimport MovieModal from '../components/MovieModal';\n\nclass HomePage extends Component<any, any>{\n    constructor(props: any) {\n        super(props);\n        this.handleMovieSelect = this.handleMovieSelect.bind(this);\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n        props.requestToken();\n    }\n    componentWillReceiveProps(nextProps: { query: any; }){\n        if(this.props.query !== nextProps.query)\n            this.handleSearchChange(nextProps.query)\n    }\n\n    handleMovieSelect(movie:Movie) {\n        this.props.selectMovie(movie);\n    }\n\n    handleSearchChange(query: any) {\n        this.props.searchMovies(query);\n    }\n\n    render() {\n        const {\n            upcomingResults,\n            upcomingLoading,\n            popularResults,\n            popularMoviesLoading,\n            showModal,\n            selectedMovie,\n            cast\n        } = this.props;\n        const modal = showModal ? (<Modal>\n            <MovieModal {...selectedMovie} cast={cast} />\n        </Modal>) : null;\n        return (\n            <React.Fragment>\n                <section className=\"jumbotron mb-5\">\n                    <Search />\n                </section>\n\n                <section className=\"container mb-5\">\n                    <h4 className=\"section__heading\">Upcoming Movies</h4>\n                    <MoviesList collection={upcomingResults} loading={upcomingLoading} onClick={this.handleMovieSelect} />\n                </section>\n\n                <section className=\"container\">\n                    <h4 className=\"section__heading\">top rated movies</h4>\n                    <MoviesList collection={popularResults} loading={popularMoviesLoading} onClick={this.handleMovieSelect} />\n                </section>\n                {modal}\n            </React.Fragment>\n        );\n    }\n}\nexport default connect(\n    ({\n         upcomingMovies, upcomingLoading, popularMovies, popularMoviesLoading, showMovie, selectMovie, cast}:any)=> ({\n        upcomingResults: upcomingMovies,\n        upcomingLoading,\n        popularResults: popularMovies,\n        popularMoviesLoading,\n        showModal: showMovie,\n        selectedMovie: selectMovie,\n        cast\n    }),\n    { requestToken, selectMovie }\n)(HomePage);","import React from 'react';\n\nexport default function loader() {\n    return (<div>loading</div>);\n};\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {requestNowPlaying, selectMovie} from \"../actions\";\nimport Modal from './Modal';\nimport Loading from '../components/loader';\nimport MoviesList from '../components/moviesList';\nimport {Movie} from \"../models/Movie\";\nimport MovieModal from \"../components/MovieModal\";\nimport Search from \"../components/searchWithResults\";\n\nclass NowPlaying extends Component<any, any>{\n    constructor(props: any) {\n        super(props);\n        this.handleMovieSelect = this.handleMovieSelect.bind(this);\n    }\n    componentDidMount() {\n        this.props.requestNowPlaying();\n    }\n\n    handleMovieSelect(movie:Movie){\n        this.props.selectMovie(movie);\n    }\n\n    render() {\n        const { nowPlaying ,selectedMovie, showModal, cast } = this.props;\n        const isLoading = nowPlaying.length != 0;\n        const content = isLoading ? <MoviesList collection={nowPlaying} onClick={this.handleMovieSelect} loading={false}/> : <Loading/>;\n        const modal = showModal ? (<Modal>\n            <MovieModal {...selectedMovie} cast={cast}  />\n        </Modal>) : null;\n        return (\n            <React.Fragment>\n                <section className=\"jumbotron mb-5\">\n                    <Search />\n                </section>\n\n                <section className=\"container mb-5\">\n                    <h4 className=\"section__heading\">Now Playing</h4>\n                    {content}\n                </section>\n                {modal}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect(({nowPlaying,selectMovie,showMovie,cast}:any)=>({\n    nowPlaying,\n    showModal: showMovie,\n    selectedMovie: selectMovie,\n    cast\n}),{requestNowPlaying,selectMovie})(NowPlaying)","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default function NotFoundPage() {\n    return (\n        <section className=\"four-oh-four\">\n            <h2 className=\"four-oh-four__message\">\n                The page you were looking for could not be found.\n            </h2>\n            <h1 className=\"four-oh-four__code\">four oh four</h1>\n            <p className=\"four-oh-four__actions\">\n                Please go home  <Link className=\"nav-link\" to=\"/\">Home</Link>\n            </p>\n        </section>);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport configureStore from './configureStore';\nimport './index.css';\nimport App from './containers/App';\nimport HomePage from './containers/HomePage';\nimport NowPlaying from './containers/NowPlaying';\nimport NotFoundPage from './containers/NotFoundPage';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nconst MOUNT_NODE = document.getElementById('root');\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <Router basename={`${process.env.PUBLIC_URL}/`} >\n          <App>\n              <Switch>\n                  <Route exact path='/'><HomePage /></Route>\n                  <Route path=\"/now-playing\"><NowPlaying /></Route>\n                  <Route path=\"*\"><NotFoundPage/></Route>\n              </Switch>\n          </App>\n      </Router>\n  </Provider>,\n  MOUNT_NODE\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createCycleMiddleware } from 'redux-cycles';\nimport rootReducer from './reducers';\nimport cycles from './cycle';\nimport {run} from '@cycle/run';\nimport {makeHTTPDriver} from '@cycle/http';\nimport {timeDriver} from '@cycle/time';\n\nexport default function configureStore() {\n    const cycleMiddleware = createCycleMiddleware();\n    const { makeActionDriver, makeStateDriver } = cycleMiddleware;\n\n    const composeEnhancers = (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\n    const middlewares = [cycleMiddleware];\n    const enhancers = [applyMiddleware(...middlewares)];\n    const store = createStore(\n        rootReducer,\n        composeEnhancers(...enhancers)\n    )\n    run(cycles, {\n        ACTION: makeActionDriver(),\n        STATE: makeStateDriver(),\n        Time: timeDriver,\n        HTTP: makeHTTPDriver(),\n    })\n    return store;\n}","module.exports = __webpack_public_path__ + \"static/media/film-poster-placeholder.d1b4253f.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.8beb1160.png\";"],"sourceRoot":""}